# Edit this configuration file to define what should be installed on
# your system. Help is available in the configuration.nix(5) man page, on
# https://search.nixos.org/options and in the NixOS manual (`nixos-help`).

{ config, lib, pkgs, ... }:




{
  imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
    ];

  boot = {

    plymouth = {
      enable = true;
      theme = "rings";
      themePackages = with pkgs; [
        # By default we would install all themes
        (adi1090x-plymouth-themes.override {
          selected_themes = [ "rings" ];
        })
      ];
    };

    # Enable "Silent Boot"
    consoleLogLevel = 0;
    initrd.verbose = false;
    kernelParams = [
      "quiet"
      "splash"
      "boot.shell_on_fail"
      "loglevel=3"
      "rd.systemd.show_status=false"
      "rd.udev.log_level=3"
      "udev.log_priority=3"
    ];
    # Hide the OS choice for bootloaders.
    # It's still possible to open the bootloader list by pressing any key
    # It will just not appear on screen unless a key is pressed
    loader.timeout = 0;
    loader.efi.canTouchEfiVariables = true;
    loader.systemd-boot.enable = true;

  };

  # Use the systemd-boot EFI boot loader.
  #boot.loader.systemd-boot.enable = true;
  #boot.loader.efi.canTouchEfiVariables = true;

  # networking.hostName = "nixos"; # Define your hostname.
  # Pick only one of the below networking options.
  # networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.
   networking.networkmanager.enable = true;  # Easiest to use and most distros use this by default.

  # Set your time zone.
 time.timeZone = "Europe/Madrid";


 environment.sessionVariables = {
   NIXOS_OZONE_WL = "1";
 };





 #nixpkgs.overlays = let
 #   nix-matlab = import (builtins.fetchTarball "https://gitlab.com/doronbehar/nix-matlab/-/archive/master/nix-matlab-master.tar.gz");
 # in [
 #   nix-matlab.overlay
 #   (
 #     final: prev: {
 #       # Your own overlays...
 #     }
 #   )
 # ];




  # Configure network proxy if necessary
  # networking.proxy.default = "http://user:password@proxy:port/";
  # networking.proxy.noProxy = "127.0.0.1,localhost,internal.domain";

  # Select internationalisation properties.
  # i18n.defaultLocale = "en_US.UTF-8";
  # console = {
  #   font = "Lat2-Terminus16";
  #   keyMap = "us";
  #   useXkbConfig = true; # use xkb.options in tty.
  # };

  # Enable the Hyprland tile manager.
  services = {
    libinput.enable = true;
    xserver = {
      enable = true;
      xkb.layout = "es";
      excludePackages = [ pkgs.xterm ];
      displayManager.gdm = {
        enable = true;
        wayland = true;
      };
    }; 
  };

  programs = {
    hyprland = { 
      enable = true;
      xwayland.enable = true;
    };
  };
  
  xdg = {
    autostart.enable = true;
    portal = {
      enable = true;
      extraPortals = [
        pkgs.xdg-desktop-portal
        pkgs.xdg-desktop-portal-gtk
      ];
    };
  };


  # Configure keymap in X11
  # services.xserver.xkb.layout = "es";
  # services.xserver.xkb.options = "eurosign:e,caps:escape";

  # Enable CUPS to print documents.
  # services.printing.enable = true;

  # Enable sound.
  # hardware.pulseaudio.enable = true;
  # OR
  
   services.pipewire = {
     enable = true;
     pulse.enable = true;
     alsa.enable = true;
     alsa.support32Bit = true;
   };

systemd.services.docker = {
  enable = true;
  #path = [ pkgs.nix i];
  serviceConfig = {
     User = "root";
     ExecStart = "/nix/store/8s78j1sz06qi4s67zr388bk1cz15ja6n-user-environment/bin/dockerd";
   };
   wantedBy = [ "multi-user.target" ];
};

  # Enable touchpad support (enabled default in most desktopManager).
  # services.libinput.enable = true;

  # Define a user account. Don't forget to set a password with ‘passwd’.
   users.users.corvus = {
     isNormalUser = true;
     extraGroups = [
       "wheel"
	"dialout" 
       "docker"
       "sound" "audio"  "video"
       "networkmanager"
       "input"
       "tty"
     ]; # Enable ‘sudo’ for the user.
     packages = with pkgs; [
       firefox
       tree
       vscode
       neofetch
       git
       fzf
       spotify
       texlive.combined.scheme-full 
       yazi
       bottom
       bluez
       imagemagick
       cava
       cbonsai
       cmatrix
       sass
       pywal
       zoxide
       eza
       thefuck
       python
       python3
       librespot
       grimblast
       discord
       networkmanagerapplet
       arduino-ide
       docker
       usbutils
       plymouth
       vlc
       (vscode-with-extensions.override {
         vscodeExtensions = with vscode-extensions; [
           james-yu.latex-workshop
         ];
       })
     ];
   };



nixpkgs.config.permittedInsecurePackages = [
                "python-2.7.18.8"
              ];

  # List packages installed in system profile. To search, run:
  # $ nix search wget
   environment.systemPackages = with pkgs; [
     vim # Do not forget to add an editor to edit configuration.nix! The Nano editor is also installed by default.
     wget
     kitty
     swww
     pulseaudio
     xdg-utils
     xdg-desktop-portal
     xdg-desktop-portal-gtk
     xdg-desktop-portal-hyprland
     hyprpaper
     polkit_gnome
     gsettings-desktop-schemas
     eww
     btop
     rofi-wayland
     wl-gammarelay-rs
     wl-gammarelay-applet
     freerdp3
     qjackctl
     gtk3
     gtk-layer-shell
     pango
     libdbusmenu-gtk3
     dbus
     cairo
     glib
     gdk-pixbuf
     libgcc
     glibc
     unzip
     #matlab
     pamixer
     ncspot
     playerctl
     socat
     jq
     brightnessctl
     baobab
   ];


fonts.packages = with pkgs; [
  nerdfonts #fucking big and long 
];


#services.xserver.gdk-pixbuf.modulePackages = [ pkgs.librsvg ];

  #CUSTOM PROGRAM CONFIGS
  users.defaultUserShell = pkgs.zsh;

  programs.zsh = {
    enable = true;
    enableCompletion = true;
    autosuggestions.enable = true;
    syntaxHighlighting.enable = true;
    shellAliases = {
      ll = "ls -l";
      update = "sudo nixos-rebuild switch";
      config = "sudo vim /etc/nixos/configuration.nix";
      windows = "docker start windows && sleep .5 && xfreerdp /v:172.18.0.2:3389  /u:corvus /p:123 /cert:ignore /sound /f ";
    };
    ohMyZsh = {
      enable = true;
      plugins = [ "git" ];
      theme = "agnoster";
    };
  };

services.devmon.enable = true;
services.gvfs.enable = true;
services.udisks2.enable = true;

  nixpkgs.config.allowUnfree = true; 
  # Some programs need SUID wrappers, can be configured further or are
  # started in user sessions.
  # programs.mtr.enable = true;
  # programs.gnupg.agent = {
  #   enable = true;
  #   enableSSHSupport = true;
  # };

  # List services that you want to enable:

  # Enable the OpenSSH daemon.
  # services.openssh.enable = true;

  # Open ports in the firewall.
  # networking.firewall.allowedTCPPorts = [ ... ];
  # networking.firewall.allowedUDPPorts = [ ... ];
  # Or disable the firewall altogether.
  # networking.firewall.enable = false;

  # Copy the NixOS configuration file and link it from the resulting system
  # (/run/current-system/configuration.nix). This is useful in case you
  # accidentally delete configuration.nix.
   system.copySystemConfiguration = true;

  # This option defines the first version of NixOS you have installed on this particular machine,
  # and is used to maintain compatibility with application data (e.g. databases) created on older NixOS versions.
  #
  # Most users should NEVER change this value after the initial install, for any reason,
  # even if you've upgraded your system to a new NixOS release.
  #
  # This value does NOT affect the Nixpkgs version your packages and OS are pulled from,
  # so changing it will NOT upgrade your system - see https://nixos.org/manual/nixos/stable/#sec-upgrading for how
  # to actually do that.
  #
  # This value being lower than the current NixOS release does NOT mean your system is
  # out of date, out of support, or vulnerable.
  #
  # Do NOT change this value unless you have manually inspected all the changes it would make to your configuration,
  # and migrated your data accordingly.
  #
  # For more information, see `man configuration.nix` or https://nixos.org/manual/nixos/stable/options#opt-system.stateVersion .
  system.stateVersion = "24.05"; # Did you read the comment?



}
